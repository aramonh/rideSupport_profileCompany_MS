#Test with: http://editor.swagger.io/

swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Authentication of Companys
  description: PHP(Laravel) + MySQL
  license:
    name: Software Architecture, 2020-I
host: host:8000
basePath: /rideSupport-profileCompany-ms/routes
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
 

  /api/company:
    post:
      summary: Creates a new company
      operationId: createCompany
      parameters:
        - name: company
          in: body
          required: true
          description: Company Object
          schema:
            $ref: '#/definitions/Company'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all company
      operationId: getAllCompany
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/CompanyList'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /api/company/{id}:
    get:
      summary: Returns an company with the given id
      operationId: getCompanyById
      parameters:
        - name: id
          in: path
          description: The id of the company to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Company'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates an company with the given id
      operationId: updateCompany
      parameters:
        - name: id
          in: path
          description: The id of the company to be updated
          required: true
          type: integer
        - name: company
          in: body
          required: true
          description: Company Object
          schema:
            $ref: '#/definitions/Company'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes an company with the given id
      operationId: deleteCompany
      parameters:
        - name: id
          in: path
          description: The id of the company to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
            
            
            
  /api/company/login:
    post:
      summary: Login company existing
      operationId: loginCompany
      parameters:
        - name: login
          in: body
          required: true
          description: Login Object
          schema:
            $ref: '#/definitions/Login'
      responses:
        '201':
          description: Authorizated
        '400':
          description: Username/Email does not exist, please register
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

definitions:

  # Company
  Company:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
      password:
        type: string
      name:
        type: string
      city:
        type: string
      address:
        type: string
      phone:
        type: number
      manager:
        type: string

  Login:
    type: object
    properties:
      email:
        type: string
      password:
        type: string

  CompanyList:
    type: object
    required:
      - total
      - list
    properties:
      total:
        type: number
      list:
        type: array
        items:
          $ref: '#/definitions/Company'

# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: number
      description:
        type: object